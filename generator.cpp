#include <clocale>
#include <cmath>
#include <iostream>

using namespace std;

//константы
const int N = 2500; //количество элементов
const int r = 10;  //кол-во интервалов
const double p = 0.1;  //теоретическая вероятность попадания в каждый интервал
double mass[N];  //массив псевдослучайных чисел

int l_aper;  //длина апериодичности
int l_per;  //длина периода
int p_i[r];  //количество попаданий в каждый интервал
double X2;  //хи-вквадрат



//функция для расчета дробной части
double D(double x) {
    int y = (int)x;
    return x-y;
}



void Arr_filling () {
    double y0;
    int k;
    cout<<"\nВведите гамма-нулевое: "; cin>>y0;
    cout<<"\nВведите количество знаков после запятой: "; cin>>k;
    for (int i=0; i<N; i++) {
        mass[i]=y0;
        y0 = pow(10, -k) * (int)(pow(10, k) * D(pow(1-y0, 3)*pow(10, k))); //метод серидины квадратов
    }
    cout<<"\nМАССИВ ЗАПОЛНЕН ПСЕВДОСЛУЧАЙНЫМИ ЧИСЛАМИ\n";
    cout<<"\n----------------------------------------\n";
}




void Length () {
    cout<<"\nФУНКЦИЯ ОПРЕДЕЛЕНИЯ ДЛИН ПЕРИОДА И АПЕРИОДИЧНОСТИ\n";
    l_aper = 0;
    l_per = 0;
    bool flag=true; //если в последовательности будут найдены одинаковые элементы, flag->false
    for (int i=0; i<N; i++) {
        for (int j=i+1; j<N; j++) {
            if (fabs(mass[i]-mass[j])<0.00000001) {//сравниваем переменные типа double
                cout << "\nCовпадение в " << i << "-ом и " << j << "-ом элементах: " << mass[i] << " и " << mass[j] << endl;
                l_aper = j;
                l_per = j-i;
                flag=false;
            }
            if (!flag) break;
        }
        if (flag) {//если нет одинаковых элементов, длина апериодичности = длине последовательности
            l_aper = N;
            l_per = 0;
        }
        if (!flag) break;
    }
    cout << "Период: " << l_per << endl;
    cout << "Апериодичность: " << l_aper << endl;
    cout<<"\n----------------------------------------\n";
}



void Calc_pi () {
    cout<<"\nФУНКЦИЯ РАСЧЕТА КОЛИЧЕСТВА ПОПАДАНИЯ В КАЖДЫЙ ИНТЕРВАЛ\n";
    for (int i=0; i<r; i++) {//обнуляем весь массив, для дальнейших рассчетов
        p_i[i] = 0;
    }

    cout<<"[ ";
    for(int i=0; i<r; i++) {
        for(int j=0; j<l_aper; j++) {
            if (mass[j]>(i*p) && mass[j]<((i+1)*p)) //например, if (mass[i]>0.1 && mass[i]<0.2)...
                p_i[i]++;                           //...p_i[1] ++
        }
    }
    for (int i=0; i<r; i++) {//выводим результат на экран
        cout<<p_i[i]<<" ";
    }
    cout<<"]"<<endl<<endl;
    cout<<"\n----------------------------------------\n";
}



void Calc_X2() {
    cout<<"\nФУНКЦИЯ РАСЧЕТА ХИ-КВАДРАТ\n";
    X2 = 0;
    for (int i=0; i<r; i++)
        X2+=pow((p_i[i]-(l_aper*p)),2)/(l_aper*p);
    cout<<"X2 = "<<X2;
    cout<<"\n----------------------------------------\n";
}


void Show() {
    int n;
    cout<<"Вывести последовательность до: "; cin>>n;
    if (n>N) n=N;
    for(int i=0; i<n; i++) {
        cout<<mass[i]<<", ";
    }
}



int main() {
    setlocale(LC_ALL, "rus");

    cout<<"Программа генерирует псевдослучайную последовательнсоть из 2500 элементов на интервале (0;1)\n"
          "Затем расчитывает длины периода и апериодичности  и вероятность попадания в каждый интервал (10 интервалов)\n"
          "После чего считает ХИ-квадрат для последовательности длиной апериодичности.";
    cout<<"\n----------------------------------------\n";
    Arr_filling();
    Length();
    Calc_pi();
    Calc_X2();
    Show();

    return 0;
}

